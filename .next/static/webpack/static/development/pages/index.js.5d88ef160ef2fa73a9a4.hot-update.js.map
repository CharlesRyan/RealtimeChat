{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.5d88ef160ef2fa73a9a4.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Chat from '../components/Chat';\r\nimport Layout from '../components/Layout';\r\n// import Emoji from '../components/Emoji';\r\n\r\n// import { Transition } from 'react-transition-group';\r\n\r\nclass IndexPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { user: null, \r\n                  value: '', \r\n                  showChat: false,\r\n                  entered: false }\r\n    // this.state = { user: 'user', value: '' }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    this.logOut = this.logOut.bind(this)\r\n    \r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n// transition settings\r\n\r\n  duration = 1000;\r\n\r\n  defaultStyle = {\r\n    transition: `opacity ${this.duration}ms ease-in-out`,\r\n    opacity: 0,\r\n  }\r\n\r\n  transitionStyles = {\r\n    entering: { opacity: 0 },\r\n    entered:  { opacity: 1 },\r\n  };\r\n\r\n\r\n\r\n  handleKeyUp = evt => {\r\n    if (evt.keyCode === 13) {\r\n      // const user =  evt.target.value;\r\n      // this.setState({ user, open: true });\r\n      this.logIn();\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  flashInput = () => {\r\n    const input = this.inputRef.current;\r\n    input.style.background = 'rgba(255,0,0,0.2)';\r\n    setTimeout(() => { input.style.background = 'none'; }, 100);\r\n    setTimeout(() => { input.style.background = 'rgba(255,0,0,0.2)'; }, 200);\r\n    setTimeout(() => { input.style.background = 'none'; }, 300);\r\n  }\r\n\r\n  // username checking?\r\n  logIn = () => {\r\n    if(this.state.value) {\r\n      this.setState({ user: this.state.value, showChat: true, value: \"\" });\r\n    } else{\r\n      this.flashInput();\r\n    } \r\n  }\r\n  \r\n  logOut = () => {\r\n    this.setState({ user: null, showChat: false });\r\n  }\r\n  \r\n  render() {\r\n    const { user } = this.state;\r\n\r\n    return (\r\n      <Layout pageTitle=\"Realtime Chat\">\r\n      {/* <Emoji></Emoji> */}\r\n        <main className=\"container-fluid position-absolute h-100 bg-dark\">\r\n          <div className=\"row position-absolute w-100 h-100\">\r\n          \r\n          { !user &&\r\n            <section className=\"col-md-8 col-sm-10 d-flex flex-row flex-wrap align-items-center align-content-center px-sm-5 px-3\">\r\n              <div className=\"mx-auto\">\r\n              {/* <div className=\"px-5 mx-5\"> */}\r\n\r\n                <span className=\"d-block w-100 h1 text-light\" style={{marginTop: -50}}>\r\n                  { user ? <span><span style={{color: '#999'}}>Hello!</span> {user}</span> : `What is your name?` }\r\n                </span>\r\n                { !user && <div className=\"d-flex align-items-end\">\r\n                              <input type=\"text\" ref={this.inputRef} value={this.state.value} onChange={this.handleChange} className=\"form-control mt-3 px-3 py-2\" onKeyUp={this.handleKeyUp} autoComplete=\"off\" style={{ background: 'transparent', color: '#999', border: 0, borderBottom: '1px solid #666', borderRadius: 0, fontSize: '3rem', fontWeight: 500, boxShadow: 'none !important' }} /> \r\n                              <svg style={{ cursor: 'pointer'}} onClick={this.logIn} className=\"ml-2 ml-sm-3 mb-2 mb-sm-3\" viewBox=\"0 0 129 129\" enableBackground=\"new 0 0 129 129\" width=\"50px\" height=\"50px\">\r\n                                <g>\r\n                                  <path d=\"m40.4,121.3c-0.8,0.8-1.8,1.2-2.9,1.2s-2.1-0.4-2.9-1.2c-1.6-1.6-1.6-4.2 0-5.8l51-51-51-51c-1.6-1.6-1.6-4.2 0-5.8 1.6-1.6 4.2-1.6 5.8,0l53.9,53.9c1.6,1.6 1.6,4.2 0,5.8l-53.9,53.9z\" fill=\"#FFFFFF\"/>\r\n                                </g>\r\n                              </svg>  \r\n                            </div>\r\n                            }\r\n              </div>\r\n            </section>\r\n          }\r\n            { user &&\r\n            // <Transition\r\n            // in={this.state.showChat}\r\n            // timeout={this.duration}\r\n            // unmountOnExit\r\n            // style={{\r\n            //   ...this.defaultStyle,\r\n            //   ...this.transitionStyles[this.state]}}\r\n            // > \r\n              <div className=\"w-100 d-flex justify-content-end\">\r\n                <section className=\"col-md-4 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\">\r\n                  {/* { user && <Chat activeUser={user} /> } */}\r\n\r\n                  <Chat activeUser={user} logOut={this.logOut} /> \r\n                </section>\r\n              </div>\r\n            // </Transition>\r\n          } \r\n          </div>\r\n        </main>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default () => (\r\n  <IndexPage />\r\n); "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAGA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AAoBA;AACA;AAFA;AACA;AApBA;AAyBA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AACA;AAzBA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AA4CA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAlDA;AAqDA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AA3DA;AA6DA;AAAA;AAAA;AAAA;AACA;AACA;AA7DA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AAZA;AAaA;AACA;AACA;;;AAwBA;AACA;AAAA;AAAA;AACA;;;AAuBA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAnCA;AA4CA;;;;AApHA;AACA;AAqHA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}